/*class Node
{
    int data;
    Node left,right;
    Node(int d){
        data=d;
        left=right=null;
    }
}*/

class Solution
{
	int countNonLeafNodes(Node root) {
	    if(root==null)
	    return 0;
	    Queue<Node> q=new LinkedList<>();
	    q.add(root);
	    int count=0;
	    while(!q.isEmpty()){
	        Node level=q.remove();
	        int c=0;
	        if(level.left!=null){
	            q.add(level.left);
	            c++;
	        }
	        if(level.right!=null){
	            q.add(level.right);
	            c++;
	        }
	        if(c!=0)
	        count++;
	    }
	    return count;
	}
}

-----------------------------------OR------------------------------------------

class Solution
{
	int countNonLeafNodes(Node root) {
	    if(root==null)
	    return 0;
	    if(root.left==null && root.right==null)
	    return 0;
	    else
	    return countNonLeafNodes(root.left)+countNonLeafNodes(root.right)+1;
	}
}

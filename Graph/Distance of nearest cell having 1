class Solution
{
    public int[][] nearest(int[][] grid)
    {
        int n=grid.length,m=grid[0].length;
        Queue<int[]> q=new LinkedList<>();
        boolean v[][]=new boolean[n][m];
        int res[][]=new int[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    q.add(new int[]{i,j,0});
                    v[i][j]=true;
                    res[i][j]=0;
                }
            }
        }
        int x[]={-1,1,0,0};
        int y[]={0,0,-1,1};
        while(!q.isEmpty()){
            int a[]=q.remove();
            for(int j=0;j<4;j++){
                int dx=a[0]+x[j];
                int dy=a[1]+y[j];
                int l=a[2];
                if(dx>=0 && dx<n && dy>=0 && dy<m && !v[dx][dy]){
                    q.add(new int[]{dx,dy,l+1});
                    v[dx][dy]=true;
                    res[dx][dy]=l+1;
                }
            }
        }
        return res;
    }
}
